version: "3.8"

services:
  db:
    image: postgres:14
    container_name: spoti-fly-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1713
      POSTGRES_DB: spotifly
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d # scripts SQL de inicialização, se necessário
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d spotifly"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: spoti-fly-backend
    ports:
      - "5000:5000"
    # volume comentado para evitar sobrescrever node_modules dentro do container
    # - ./backend:/app
    environment:
      DATABASE_URL: postgresql://postgres:1713@db:5432/spotifly
      JWT_SECRET: KLt84mc9NdoDgsWjao7zE4Wpz4usGDwq
      PORT: 5000
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: spoti-fly-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules # impede que sobrescreva o node_modules do container
    environment:
      VITE_API_URL: http://localhost:5000/api
    depends_on:
      - backend

volumes:
  postgres_data:
